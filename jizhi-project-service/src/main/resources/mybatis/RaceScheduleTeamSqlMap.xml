<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="raceScheduleTeam" >
  <resultMap id="BaseResultMap" type="com.jizhi.model.RaceScheduleTeam" >
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="race_id" property="raceId" jdbcType="INTEGER" />
		<result column="sort" property="sort" jdbcType="INTEGER" />
		<result column="begin_date" property="beginDate" jdbcType="DATE" />
		<result column="begin_time" property="beginTime" jdbcType="VARCHAR" />
		<result column="end_time" property="endTime" jdbcType="VARCHAR" />
		<result column="team_one" property="teamOne" jdbcType="VARCHAR" />
		<result column="team_two" property="teamTwo" jdbcType="VARCHAR" />
		<result column="success_team_id" property="successTeamId" jdbcType="VARCHAR" />
		<result column="collect_item" property="collectItems" jdbcType="VARCHAR" />
		<result column="judge_item" property="judgeItems" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
	id,race_id,sort,begin_date,begin_time,end_time,team_one,team_two,success_team_id,collect_item,judge_item,type,address,status
  </sql>
  
  <insert id="insert" parameterType="com.jizhi.model.RaceScheduleTeam">
  	insert into race_schedule_team (race_id,sort,begin_date,begin_time,end_time,team_one,team_two,success_team_id,collect_item,judge_item,type,address,status) 
  		values (#{raceId},#{sort},#{beginDate},#{beginTime},#{endTime},#{teamOne},#{teamTwo},#{successTeamId},#{collectItems},#{judgeItems},#{type},#{address},#{status})
  </insert>
  
  <update id="update" parameterType="com.jizhi.model.RaceScheduleTeam">
  	update race_schedule_team set 
  		sort = #{sort}, 
  		begin_date = #{beginDate},
  		begin_time = #{beginTime},
  		end_time = #{endTime},
  		team_one = #{teamOne},
  		team_two = #{teamTwo},
  		success_team_id = #{successTeamId},
  		collect_item = #{collectItems},
  		judge_item = #{judgeItems},
  		type = #{type},
  		address = #{address}
  		where id = #{id} and race_id = #{raceId} 
  </update>
  
  <select id="query" resultMap="BaseResultMap" parameterType="java.util.HashMap">
  	select 
  	<include refid="Base_Column_List"></include>
  	from race_schedule_team where 1=1
  	<if test="raceId > 0 " > and race_id=#{raceId}</if>
  	<if test="teamId != null and teamId != '' " > and (team_one = #{teamId} or team_two = #{teamId})</if>
  	<if test="type > 0 " > and type=#{type}</if>
  	<if test="status > 0 " > and status=#{status}</if>
  	order by sort asc
  	limit #{begin},#{size}
  </select>
  
  <select id="queryCount" resultType="Integer" parameterType="java.util.HashMap">
  	select 
  	count(1) 
  	from race_schedule_team where 1=1
  	<if test="raceId > 0 " > and race_id=#{raceId}</if>
  	  	<if test="teamId != null and teamId != '' " > and (team_one = #{teamId} or team_two = #{teamId})</if>
  	<if test="type > 0 " > and type=#{type}</if>
  	<if test="status > 0 " > and status=#{status}</if>
  </select>
  
  <select id="queryById" resultMap="BaseResultMap" parameterType="Integer">
  	select 
  	<include refid="Base_Column_List"></include>
  	from race_schedule_team where id = #{id}
  </select>
  
  <delete id="delete" parameterType="Integer">
  	delete from race_schedule_team where id = #{id}
  </delete>
  
  <update id="updateStatusByRaceId" parameterType="java.util.HashMap">
  	update race_schedule_team set status = #{status} where race_id = #{raceId} 
  </update>
  
</mapper>